# -*- coding: utf-8 -*-
"""LAB3.ipynb

Automatically generated by Colab.

Original file is located at
    https://colab.research.google.com/drive/18CBfngzrSpOsUd_jZSTEDhSZIVn7DZOQ
"""

from collections import deque

cities_graph = {
    "Islamabad": ["Rawalpindi", "Lahore", "Peshawar"],
    "Rawalpindi": ["Islamabad", "Lahore", "Murree"],
    "Lahore": ["Islamabad", "Rawalpindi", "Karachi", "Multan"],
    "Karachi": ["Lahore", "Quetta"],
    "Peshawar": ["Islamabad", "Mardan", "Kohat"],
    "Mardan": ["Peshawar", "Swat"],
    "Quetta": ["Karachi", "Zhob", "Dera Ghazi Khan"],
    "Multan": ["Lahore", "Dera Ghazi Khan", "Bahawalpur"],
    "Swat": ["Mardan", "Chitral"],
    "Dera Ghazi Khan": ["Bahawalpur", "Multan", "Quetta"],
    "Murree": ["Rawalpindi"],
    "Chitral": ["Swat"]
}

def bfs_shortest_path(graph, start, goal):
    visited = set()
    queue = deque([[start]])

    while queue:
        path = queue.popleft()
        current_city = path[-1]

        if current_city == goal:
            return path

        if current_city not in visited:
            visited.add(current_city)

            for neighbor in graph.get(current_city, []):
                new_path = list(path)
                new_path.append(neighbor)
                queue.append(new_path)

    return None

def dfs_path(graph, start, goal, path=None, visited=None):
    if path is None:
        path = []
    if visited is None:
        visited = set()

    path.append(start)
    visited.add(start)

    if start == goal:
        return path

    for neighbor in graph.get(start, []):
        if neighbor not in visited:
            result = dfs_path(graph, neighbor, goal, path.copy(), visited.copy())

            if result:
                return result

    return None

start_city = "Karachi"
goal_city = "Peshawar"

bfs_result = bfs_shortest_path(cities_graph, start_city, goal_city)
print("BFS Shortest Path from Karachi to Peshawar:", bfs_result)

dfs_result = dfs_path(cities_graph, start_city, goal_city)
print("DFS Path from Karachi to Peshawar:", dfs_result)